<?php
// $Id: greenmap.module,v 1.0.0 2007/06/26 08:28:26 tom_o_t Exp $


function sync_init(){
  global $user;
  /*if(array_key_exists('2',$user->roles)&& !$user->profile_terms_and_conditions){
    drupal_set_message(t('Terms and conditions are missing'));
  }*/
  //profile_load_profile($user);

  //
}

/**
* Display help and module information
*/
function sync_help($section='') {
  $output = '';
  switch ($section) {
    case 'admin/modules#description':
      //$output = t('');
      break;
    case 'node/add#simplenews':
     // $output =  t('Alters modules and forms for GreenMap.org.');
      break;
  }
  return $output;
}
function sync_menu($may_cache){
  global $user;
  $items = array();
  if($may_cache){
    $access = ($user->uid)?true:false;
    $items[] = array(
      'path' => 'mapmakers_agreement',
      'title' => '',
          'callback' => 'sync_mapmakers_agreement',
        'access' => $access,
          'type' => MENU_CALLBACK);

    $items[] = array(
      'path' => 'mapmakers_agreement_submit',
      'title' => '',
          'callback' => 'sync_mapmakers_agreement_submit',
          'access' => $access,
          'type' => MENU_CALLBACK);

  }
  return $items;
}


function sync_mapmakers_agreement(){
  global $user;
  drupal_set_html_head('<style type="text/css" media="all">@import "'.base_path().drupal_get_path("module","sync").'/sync.css";</style>');
  drupal_set_title(t("Updated Mapmaker's Agreement"));
  //drupal_add_css(drupal_get_path('module','sync')."/sync.css");

  $output  ="";
  $n = node_load(75); // this is the node containing a agreement
  $output .= "<div>";


  $output .= "<p>". t("You are already a registered Green Mapmaker and have signed our
            Terms & Conditions by ticking boxes at GreenMap.org. However, we
            have updated this Mapmaker Licensing Agreement because Green Map
            System (GMS) is expanding your ability to involve the general
            public in the mapmaking process, and to make your data available
            to them.") . '</p>';

  $output .= "<p>". t("GMS has created the Open Green Map ('OGM') and has incorporated
            it into our website. This will allow you, now or at some point
            in the future, to make an interactive Green Map with input from
            the general public. OGM will have a data sharing capability. It
            will also be possible for Mapmakers to generate income as
            described in Paragraph 4 below. GMS has updated the Green
            Map Icons and begun exploring the permanent archiving of all
            Green Maps. All these changes and minor corrections are noted in
            the Terms & Conditions below, which is identical to what you have
            signed, except for the edits marked in red in the downloadable
            version linked at the bottom of this page. ") . '</p>';

  $output .= "<p><strong>". t("Please read this carefully. You are requested to click the
            Agree button to
            indicate your acceptance of the updated Agreement and Release
            Form. ") . '</strong></p>';

  $output .= "<p>". t("All existing Mapmakers who do not click the 'Agree' button have
            made the choice not to utilize the Open Green Map by adding their
            data to it. Until you click Agreed, you will need to click
            'Later' each time you login. Because GMS must have uniformity in
            its treatment of all Mapmakers, if you opt out, we may not be
            able to renew your Green Mapmaker License Agreement when your
            existing term expires. ") . '</p>';

  $output .= "<p>". t("As always, GMS's purpose is to support Green Mapmakers and their
            local projects around the world by continually developing new
            resources and opportunities to expand the number of people
            making, seeing and using effective Green Maps. Your input and
            involvement is always welcome. If you need further information,
            contact us at info at greenmap dot org. ") . '</p>';

  $output .= "<p>". t("As soon as you click the 'Agree' button your account at the Open
            Green Map will be created. You can immediately login there and
            begin to create interactive Green Maps."). "</p>";

  $output .= "</div>";

  $output .= "<div id='terms'>";
  $output .= $n->body;
  $output .= "</div>";
  $output .= "<form action='".base_path()."mapmakers_agreement_submit' method='POST'>";
  //$output .= "<input type='hidden' name='uid' id='uid' value=\"".$user->uid."\" />";
  $output .= "<input type='submit' name='submit' id='submit' value=\"".t("I Agree to the the updated Terms of Use and Release.")."\" /><br />";
  $output .= "</form>";
  $output .= "<br />";
  $output .= "<form action='".base_path()."user' method='POST'>";
    $output .= "<input type='submit' name='submit' id='submit' value=\"".t("Later")."\" />";
  $output .= "</form>";
  $output .= "<table id='attachments'>\n";
  $output .= "<thead><tr><th>".t('Attachment')."</th></tr></thead>\n";
  $output .= "<tbody>\n";
  $output .= "<tr class='even'><td>\n";
  $output .= "<a href= '".base_path()."files/Mapmaker_Agreement_EN_08.rtf'>" . t("Download the Mapmaker Agreement with changes highlighted in red"). "</a>\n";
  $output .= "</td>\n";
  $output .= "</tr>\n";
  $output .= "<tr class='odd'><td>\n";
  $output .= "<a href= '".base_path()."files/Mapmaker_Agreement_EN.rtf'>" . t("Download the Mapmaker Agreement (English Version)"). "</a>\n";
  $output .= "</td>\n";
  $output .= "</tr>\n";
  $output .= "<tr class='odd'><td>\n";
  $output .= "<a href= '".base_path()."files/Mapmaker_AgreeRelease_plain08_EN.rtf'>" . t("Further explanation of changes"). "</a>\n";
  $output .= "</td>\n";
  $output .= "</tr>\n";

  $output .= "</tbody></table>\n";



  //http://www.greenmap.org/dev/gh/files/Mapmaker_Agreement_EN.rtf


  return $output;
}
function sync_mapmakers_agreement_submit(){
  global $user;
  $uid = ($user->uid)?$user->uid:false;
  if(!$uid || !$_POST['submit']){
    drupal_set_message(t('Problem occurred! Please try again.'));
    watchdog('error',t('Error TT4: either no user id or no submit of sync.module: uid:' . $user->uid . ' | submit: ' . !$_POST['submit']));
    drupal_goto('mapmakers_agreement');
    return;
  }

  drupal_set_title(t("Agreement Submit"));

  // agree the ageement

  // just to be sure
  profile_load_profile($user);
  $e = (array) $user;
  $e['profile_terms_and_conditions'] = 1; // make changes to the user
  profile_save_profile($e,$user,'E. Registration Information');
  drupal_set_message(t('Thank you, your account has been updated with the new agreement.'));


  // *** let's hack user to look like edit array
  $edit = (array) $user;
  $edit['pass'] = '';
  $edit['name'] = '';
  $edit['mail'] = '';
  while(list($k,$v) = each($edit['roles'])){
    $edit['roles'][$k] = $k;
  }

  if(_sync_users_sync($edit, $user,true)){
    // success
    watchdog('notice',t('_sync_users_sync worked on line 177 of sync.module'));
    return "";
  }else {
    // failure
    drupal_set_message(t('Problem occurred! Please try again.'));
    watchdog('error',t('Error TT3: _sync_users_sync failed line 182 of sync.module'));
    drupal_goto('mapmakers_agreement');
    return;
  }


}

function sync_open_mysql_connect($db_user,$db_pass,$db,$server = 'localhost'){

  $link = mysql_connect($server, $db_user, $db_pass);
  if (!$link) {
    watchdog('error',t('Could not connect to database. Synchronisation with Open Green Map aborted.'));
    return false;
  }

  $db_selected = mysql_select_db($db, $link);
    if (!$db_selected) {
      watchdog('error',t('Can\'t use database. Synchronisation with Open Green Map aborted.'));
      mysql_close($link); // close connect
    return false;
  }

  mysql_set_charset('utf8', $link);
  return $link;
}

function _sync_send_mail($receiver, $subject, $content, $senders_email = null, $senders_name = null){
  $boundary = "DRUPAL_MIME_BOUNDARY";
  $boundary2 = "DRUPAL_CHILD_MIME_BOUNDARY";
  $name = ($senders_name)?$senders_name:'Greenhouse';
  $mail = ($senders_email)?$senders_email:'greenhouse@greenmap.org';
  // var_dump($content);
  $html = $content;
  $plain = str_replace("\"","'",strip_tags($content,"<a>"));
  preg_match_all("/<a.*href[^=]*=[^\']*\'([^\']+)\'[^>]*>([^<]*)<\/[^aA]*a[^>]*>/i",$plain,$matches,PREG_SET_ORDER);
  while(list($k,$v) = each($matches)){
    $tmp = $matches[$k][2] . " ( " . $matches[$k][1] . " )";
    $plain = str_replace($matches[$k][0],$tmp,$plain);
  }

  // *** HEADER ***
    $header="From: $name <$mail>\r\nReply-To: $mail\r\n";
  $header .= "X-Mailer: Drupal 4.7\r\n";
  $header .= "MIME-Version: 1.0\r\n";
  $header .= "Content-Type: multipart/alternative; boundary=\"".$boundary."\"\r\n";


  // *** BODY ***
  $body = "--".$boundary."\r\n";
    $body .= "Content-Type: text/plain; charset=\"UTF-8\"\r\n\r\n";
    $body .= wordwrap( $plain ) ."\n";

    $body .= "--".$boundary."\r\n";

    $body .= "Content-Type: multipart/related; boundary=\"".$boundary2."\"\r\n\r\n";
    $body .= "--".$boundary2."\r\n";
    $body .= "Content-Type: text/html; charset=\"UTF-8\"\r\n\r\n";
    $body .= wordwrap( $html ) ."\n";

  $body .= "--".$boundary2."--\r\n";
    $body .= "--".$boundary."--\r\n";


  if(mail($receiver,$subject,$body,$header)) {
    // success
    return true;
  }else {
    // failure
    return false;
  }
}

function _sync_users_sync(&$edit, &$account,$override_update_check = false){
  // if conditions are not accepted we do nothing
  if(($account->profile_terms_and_conditions == 0) && !$override_update_check) {return false;}

  $role = 11;
  $greenhouse_uid = $account->uid;
  $greenhouse_profile_fields_fid = 97; // the place in the greenhouse that the OGM UID is stored
  $ogm_profile_fields_fid = 1; // the place in the OGM that the Greenhouse UID is stored

  $name = (trim($edit['name']) != '')?trim($edit['name']):    $account->name;
  $pass = (trim($edit['pass']) != '')?md5(trim($edit['pass'])): $account->pass;
  $mail = (trim($edit['mail']) != '')?trim($edit['mail']):    $account->mail;

  //  *** SET DATABASE VARIABLES ***
  require_once('sync.inc.php');

  // if user is not lapsed user nor new unauthenticated user then proceed

  // if name,pass and email are still the same $updated = false
  $updated =  ( ($name == $account->name) &&
          ($pass == $account->pass) &&
          ($mail == $account->mail)
        )?false:true;




  // have to check whether roles are in $edit or in $account - depends what's being edited - TT
  $users_roles = NULL;
  if(is_array($edit['roles'])){
    $users_roles = $edit['roles'];
  } elseif(is_array($account->roles)){
    $users_roles = $account->roles;
  } else {
    watchdog('error',t('Error TT1: Unable to get user roles from account. Synchronization with Open Green Map aborted.'));
    drupal_set_message(t('Unable to get user roles from account. Synchronization with Open Green Map aborted.'));
    return false;
  }

  $lapsed_roles = array('lapsed user','new unauthenticated user');
  // $lapsed_roles = array(5,6);

  // if 'lapsed user' or 'new unauthenticated user' roles found user is not approved
    $approved_user = (count(array_intersect($users_roles, $lapsed_roles)) > 0)?false:true;

  if($approved_user == false){
    watchdog('notice', t('Sync abandoned as not an approved user.')); // this is not happening
    return false;
  }

  // get ogm uid from greenhouse db
  if(!$result = db_query('SELECT value FROM {profile_values} where fid= "%d" AND uid ="%d"',$greenhouse_profile_fields_fid,$greenhouse_uid)) {
    watchdog('error',t('Error TT2: Unable to get user profile data from account. Synchronisation with Open Green Map aborted.'));
    drupal_set_message(t('Unable to get user profile data from account. Synchronisation with Open Green Map aborted.'));
    return false;
  }

  $uid = db_fetch_object($result);


  if (!$link = sync_open_mysql_connect($db_user,$db_pass,$db)) {
    watchdog('error', t('Error TT5: Couldnt do sync_open_mysql_connect line 319 in sync.module'));
    return false;
  }
  // if ogm uid alredy exist in greenhouse
  if($uid != null && $uid && $uid != '' && $uid->value != ''){

    // update ogm
    if($updated == false && $override_update_check == false) {
      // no important changes maded
      watchdog('error', t('Error TT6: Not updated as no imortant changes made: 327 in sync.module'));
      return false;
    }

    if( !$name || !$pass || !$mail ){
      watchdog('error',t('Error U001: Corrupted data error. Synchronisation with Open Green Map aborted.'));
      drupal_set_message(t('Corrupted data error. Synchronisation with Open Green Map aborted.'));
      mysql_close($link);// close connect
      return false;
    }

    $q = "UPDATE users SET name='".$name."',pass='".$pass."',mail='".$mail."' WHERE uid = '".$uid->value."'";
    if(!mysql_query($q,$link)) {
      watchdog('error',t('Error U002: Database update failure. Synchronisation with Open Green Map aborted.'));
      drupal_set_message(t('Database update failure. Synchronisation with Open Green Map aborted.'));
      mysql_close($link); // close connect
      return false;
    }

    // success

  } else { //else if ogm uid does not exist in greenhouse then we need to
      // create a new account, or find an existing one and connect



    // lookup the email address in the ogm
    if( !$mail ){
      watchdog('error',t('Error U101: Corrupted data error. Synchronisation with Open Green Map aborted.'));
      drupal_set_message(t('Corrupted data error. Synchronisation with Open Green Map aborted.'));
      mysql_close($link);// close connect
      return false;
    }

    $q = "SELECT uid FROM users WHERE mail = '".$mail."'";
    if(!$result = mysql_query($q,$link)) {
      watchdog('error',t('Error U102: Database failure. Synchronisation with Open Green Map aborted.'));
      drupal_set_message(t('Database failure. Synchronisation with Open Green Map aborted.'));
      mysql_close($link); // close connect
      return false;
    }

    $ogm_user = db_fetch_object($result);
    // if user does not exist in ogm
    if(!$ogm_user){
//      $id = db_result(db_query("SELECT id FROM {sequences} WHERE name = '%s'", $name)) + 1;

      // $q = "SELECT id FROM sequences WHERE name = 'users_uid'"; // sequences is no longer valid in Drupal 6
      // TT in retrospect, we probably don't need this now, as uid auto increments on insert
      $q = "SELECT max(uid) AS uid FROM users";
      if(!$result = mysql_query($q,$link)) {
        watchdog('error',t('Error U111: Database failure. Synchronisation with Open Green Map aborted.'));
        drupal_set_message(t('Database failure. Synchronisation with Open Green Map aborted.'));
        mysql_close($link); // close connect
        return false;
      }
      $uid = db_fetch_object($result);
      $ogm_user_uid = $uid->id + 1;

      // $q = "REPLACE INTO sequences VALUES ('users_uid', '".$ogm_user_uid."')"; // no longer necessary in Drupal 6 OGM
      /*if(!mysql_query($q,$link)) {
        watchdog('error',t('Error U113a: Unable to add data to the database. Synchronisation with Open Green Map aborted.'));
        drupal_set_message(t('Unable to add data to the database. Synchronisation with Open Green Map aborted.'));
        mysql_close($link); // close connect
        return false;
      } */


      if( !$name || !$pass || !$mail  || ! $ogm_user_uid){
        watchdog('error',t('Error U112: Corrupted data error. Synchronisation with Open Green Map aborted.'));
        drupal_set_message(t('Corrupted data error. Synchronisation with Open Green Map aborted.'));
        mysql_close($link);// close connect
        return false;
      }

      // add new user to ogm
      // NEED TO ADD DATE HERE TOO  _ TT *******************
      // TT Removing explicit uid here - it's an auto incrementing field now that we're in drupal 6. Need to get the uid afterwards.
      $timestamp = time();
      $q = "INSERT INTO users (name, pass,mail,status) VALUES ('$name','$pass','$mail','1')";
      if(!mysql_query($q,$link)) {
        watchdog('error',t('Error U113: Unable to add data to the database. Synchronisation with Open Green Map aborted. Error: ' . mysql_error()));
        drupal_set_message(t('Unable to add data to the database. Synchronisation with Open Green Map aborted.'));
        mysql_close($link); // close connect
        return false;
      } else {
        $insert_id = mysql_insert_id ($link);
        if ($insert_id != $ogm_user_uid) {
          watchdog('error',t('Error U113_f: ID returned by user insert does not match what we expected. Using insert id as it should be correct'));
          $ogm_user_uid = $insert_id;
        }
      }

      // add user roles to ogm
      $q = "INSERT INTO users_roles (uid, rid) VALUES ('$ogm_user_uid', '$role')";
      if(!mysql_query($q,$link)) {
        watchdog('error',t('Error U114: Unable to add data to the database. Synchronisation with Open Green Map aborted.'));
        drupal_set_message(t('Unable to add data to the database. Synchronisation with Open Green Map aborted.'));
        mysql_close($link); // close connect
        return false;
      }

      // add greenhouse uid to ogm
      $q = "INSERT INTO profile_values (fid,uid, value) VALUES ('$ogm_profile_fields_fid', '$ogm_user_uid', '$greenhouse_uid')";
      if(!mysql_query($q,$link)) {
        watchdog('error',t('Error U115: Unable to add data to the database. Synchronisation with Open Green Map aborted.'));
        drupal_set_message(t('Unable to add data to the database. Synchronisation with Open Green Map aborted.'));
        mysql_close($link); // close connect
        return false;
      }

      // put ogm uid to greenhouse db
      $q = "INSERT INTO {profile_values} (fid,uid,value) VALUES ('$greenhouse_profile_fields_fid','$greenhouse_uid','$ogm_user_uid')";
      if(!db_query($q)){
        watchdog('error',t('Error U116: Unable to add data to the greenhouse database. Synchronisation with Open Green Map aborted.'));
        drupal_set_message(t('Unable to add data to the greenhouse database. Synchronisation with Open Green Map aborted.'));
        mysql_close($link); // close connect
        return false;
      }

      // success

    }else {// else if user already has account at OGM
      // add user roles to ogm

      if( !$name || !$pass || !$mail ){
        watchdog('error',t('Error U121: Corrupted data error. Synchronisation with Open Green Map aborted.'));
        drupal_set_message(t('Corrupted data error. Synchronisation with Open Green Map aborted.'));
        mysql_close($link);// close connect
        return false;
      }

      $q = "UPDATE users SET name='".$name."',pass='".$pass."',mail='".$mail."' WHERE uid = '".$ogm_user->uid."'";
      if(!mysql_query($q,$link)) {
        watchdog('error',t('Error U122: Database update failure. Synchronisation with Open Green Map aborted.'));
        drupal_set_message(t('Database update failure. Synchronisation with Open Green Map aborted.'));
        mysql_close($link); // close connect
        return false;
      }

      $q = "SELECT * FROM users_roles WHERE uid = '".$ogm_user->uid."' AND rid ='".$role."'";
      $result = mysql_query($q,$link);

      if(!mysql_num_rows($result) || mysql_num_rows($result) == 0) {
        $q = "INSERT INTO users_roles (uid, rid) VALUES ($ogm_user->uid, $role)";
        if(!mysql_query($q,$link)) {
          watchdog('error',t('Error U123: Unable to add user role to the OGM database. Synchronisation with Open Green Map aborted.'));
          drupal_set_message(t('Unable to add data to the database. Synchronisation with Open Green Map aborted.'));
          mysql_close($link); // close connect
          return false;
        }
        // clear the data - think it's causing problems with user roles.
        $q = "UPDATE users SET data='' WHERE uid = '".$ogm_user->uid."'";
        if(!mysql_query($q,$link)) {
          watchdog('error',t('Error U123a: Unable to data in user table in OGM database. Synchronisation with Open Green Map aborted.'));
          drupal_set_message(t('Unable to add data to the database. Synchronisation with Open Green Map aborted.'));
          mysql_close($link); // close connect
          return false;
        }
      } else {
        watchdog('notice',t('No new user role created for ' . $om_user->uid . ' as they already have lead role in OGM'));
      }

      // put ogm uid to greenhouse db
      $q = "INSERT INTO {profile_values} (fid,uid,value) VALUES ($greenhouse_profile_fields_fid,$greenhouse_uid,$ogm_user->uid)";
      if(!db_query($q)){
        watchdog('error',t('Error U124: Unable to add data to the greenhouse database. Synchronisation with Open Green Map aborted.'));
        drupal_set_message(t('Unable to add data to the greenhouse database. Synchronisation with Open Green Map aborted.'));
        mysql_close($link); // close connect
        return false;
      }

      // add greenhouse uid to ogm
      $q = "INSERT INTO profile_values (fid,uid, value) VALUES ('$ogm_profile_fields_fid', '$ogm_user->uid', '$greenhouse_uid')";
      if(!mysql_query($q,$link)) {
        watchdog('error',t('Error U125: Unable to add GM uid to the OGM database. Synchronisation with Open Green Map aborted.'));
        drupal_set_message(t('Unable to add data to the database. Synchronisation with Open Green Map aborted.'));
        mysql_close($link); // close connect
        return false;
      } else {
        watchdog('notice',t('Success U125: able to add GM uid to the OGM database. Synchronisation with Open Green Map aborted.'));
      }

      $receiver = $mail;
      $subject = t("Your account at the Open Green Map has been synchronized with your new account at GreenMap.org");
      $emailcontent = t("Your account at the Open Green Map has been synchronized with your new account at GreenMap.org.<br>\n ".
            "On both %ogm and GreenMap.org your details are: <br>\n ".
            "Username: %username <br>\n ".
            "Email: %email <br>\n ".
            "Your password was sent to you when you first registered at GreenMap.org (although you may have changed it since).<br>\n ".
            "If you have forgotten your password click here to reset: %resetlink <br>\n ".
            "If you update your username, password, or email address on either site, it will be updated on the other one too.",array("%ogm"=> l(t('OpenGreenMap.org'),"http://www.opengreenmap.org"),"%username"=>$name,"%email"=>$mail,"%resetlink"=>l(t('Reset'),"user/password",array(),NULL,NULL,TRUE)));

      if(!_sync_send_mail($receiver,$subject,$emailcontent)) {
        watchdog('error',t('Error U125: Unable to send email to the user.'));
        drupal_set_message($emailcontent);
        mysql_close($link); // close connect
//        return false;
      }
      // success

    } // else end
  } // else end
  watchdog('notice',t('Synchronisation with Open Green Map successfully completed.'));
  drupal_set_message(t('Synchronisation with Open Green Map successfully completed. You can login at !link with same username and password than you use here.',array('!link' => l('www.opengreenmap.org','http://www.opengreenmap.org'))));
  mysql_close($link); // close connect
  return true;
}

function sync_user($op, &$edit, &$account, $category = NULL){
  global $user;
  switch($op){
    case 'login':

    if(count($edit) == 0){ // on register $edit array = empty
      break;
    }
    //    print_r($edit);
    //print_r($account);
    //print_r($user);
    //echo "pahempi toistaan";
    //die();
    // [5] => new unauthenticated user

      // $lapsed_roles = array('lapsed user','new unauthenticated user');
      $lapsed_roles = array(5,6);
      // if 'lapsed user' or 'new unauthenticated user' roles found -> break
      if(!is_array($account->roles)){
        break;
      }

      if(count(array_intersect($account->roles, $lapsed_roles)) > 0){
        break;
      }
      if( $user->profile_terms_and_conditions == 0 ||
        $user->profile_terms_and_conditions == null ||
        !isset($user->profile_terms_and_conditions) ||
        empty($user->profile_terms_and_conditions) ||
        !$user->profile_terms_and_conditions)
        {
          // we set this session for drupal_goto test at user_profile.tpl.php
          // we can't run drupal_goto here (for some reason)
          $_SESSION['just_logged_in'] = 1; // this is just a signal that user is just logged in
        }
      //
    break;
    case 'update':
      _sync_users_sync($edit, $account);
    break;
    case 'delete':
    break;

    case 'logout':
    break;
  }
}

function sess_regene($link) {
  $old_session_id = session_id(); // php function

  // We code around http://bugs.php.net/bug.php?id=32802 by destroying
  // the session cookie by setting expiration in the past (a negative
  // value).  This issue only arises in PHP versions before 4.4.0,
  // regardless of the Drupal configuration.
  // TODO: remove this when we require at least PHP 4.4.0

  // php functions : session_name([ string $name  ] )
  //         session_id([ string $id  ])
  //         time( void )
  //         setcookie(string $name  [, string $value  [, int $expire  [, string $path  [, string $domain  [, bool $secure  [, bool $httponly  ]]]]]])
  //         session_regenerate_id([ bool $delete_old_session  ] )
  if (isset($_COOKIE[session_name()])) {
    setcookie(session_name(), '', time() - 42000, '/');
  }

  session_regenerate_id();
  $q = "UPDATE sessions SET sid = '".session_id()."' WHERE sid = '".$old_session_id."'";
  if(!mysql_query($q,$link)) {
    watchdog('error',t('Error : Unable to update session to database. Synchronisation with Open Green Map aborted.'));
  return false;
  }

  return true;
}

function _sync_ogm_maps() {
  require_once('sync.inc.php');
  if (!$link = sync_open_mysql_connect($db_user,$db_pass,$db)) {
    watchdog('error', t('Error S6: Couldnt do sync_open_mysql_connect in sync.module'));
    return false;
  }

  // fetch the public, published ogm maps for this gm user, including url alias
  $query = sprintf("SELECT n.nid, n.uid, title, dst AS alias, field_greenhouse_map_nid_value AS gm_nid
    FROM node n
    INNER JOIN og ON og.nid=n.nid
    INNER JOIN content_type_green_map ctgm on ctgm.vid = n.vid
    LEFT JOIN url_alias ON src = CONCAT('node/', n.nid)
    WHERE type = 'green_map'
    AND status = 1
    AND og_private = 0
    ORDER BY nid", $uid);

  if(!$result = mysql_query($query,$link)) {
    watchdog('error',t('Error S7: Database select failure. Synchronisation with Open Green Map aborted.'));
    drupal_set_message(t('Database update failure. Synchronisation with Open Green Map aborted.'));
    mysql_close($link); // close connect
    return false;
  }

  db_query('TRUNCATE TABLE {sync_ogm_green_maps}');
  while ($ogm_map = mysql_fetch_object($result)) {
    db_query("INSERT INTO {sync_ogm_green_maps} (ogm_nid, ogm_uid, gm_nid, title, alias)
        VALUES (%d, %d, %d, '%s', '%s')",
        $ogm_map->nid,
        $ogm_map->uid,
        $ogm_map->gm_nid ? $ogm_map->gm_nid : 0,
        $ogm_map->title,
        $ogm_map->alias);
  }

  mysql_close($link);
  return true;
}

function sync_fetch_all_ogm_maps() {
  $ogm_maps = array();
  $result = db_query("SELECT ogm_uid, ogm_nid, gm_nid, title, alias FROM sync_ogm_green_maps");
  while ($ogm_map = db_fetch_object($result)) {
    if ($gm_nid = $ogm_map->gm_nid) {
      $ogm_maps[$gm_nid] = $ogm_map;
    }
  }
  return $ogm_maps;
}

function sync_fetch_ogm_maps($uid = 0) {
  $ogm_maps = array();
  $greenhouse_profile_fields_fid = 97; // the place in the greenhouse that the OGM UID is stored

  $result = db_query("SELECT u.uid, u.name, pv.value AS ogm_uid, ogm_nid, title, alias FROM users u INNER JOIN profile_values pv ON pv.uid=u.uid INNER JOIN sync_ogm_green_maps s_o_g_m ON s_o_g_m.ogm_uid = pv.value WHERE u.uid = %d AND pv.fid = %d", $uid, $greenhouse_profile_fields_fid);

  while ($ogm_map = db_fetch_object($result)) {
    $ogm_maps[] = $ogm_map;
  }
  return $ogm_maps;
}

function sync_cron() {
  _sync_ogm_maps();
}
